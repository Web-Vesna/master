% layout 'index';

<div id="wrapper">
    <div class="ui center aligned container">
        <div class="ui centered grid">
            <div class="sixteen wide column">
                <div class="ui three steps">
                    <a class="active step" id="step-1-nav">
                        <i class="sitemap icon"></i>
                        <div class="content">
                            <div class="title">Организация</div>
                        </div>
                    </a>
                        <a class="disabled step" id="step-2-nav">
                        <i class="building icon"></i>
                        <div class="content">
                            <div class="title">Адрес</div>
                        </div>
                    </a>
                    <a class="disabled step" id="step-3-nav">
                        <i class="exchange icon"></i>
                        <div class="content">
                            <div class="title">Объекты</div>
                        </div>
                    </a>
                </div>
            </div>

            <!-- STEP 1 -->
            <div id="catalog-org-wrap" class="step-1 ten wide column report-request-form">
                <div>
                    <select name="region" id="region_sel">
                        % my %regions = map { $_->{region} => $_->{id} } @{$districts->{districts}};
                        % for (sort keys %regions) {
                        <option value="<%= $_ %>" district_id="<%= $regions{$_} %>" <%= $_ eq 'Москва' ? 'selected' : '' %>><%= $_ %></option>
                        % }
                    </select>
                </div>
            </div>
            <div id="catalog-org-wrap" class="step-1 ten wide column report-request-form">
                <div>
                    <select name="organization" id="org_sel">
                        <option value="-1" selected>Выберете организацию</option>
                    </select>
                </div>
            </div>

            <div id="catalog-org-bottom-margin"></div>

            <div id="address_sel" class="step-1 ten wide column" style="display:none">
                <div class="ui form">
                    <div class="grouped fields">
                        <label>Выберите адрес:</label>
                    </div>
                </div>
            </div>
            <!-- END OF STEP 1 -->

            <!-- STEP 2 -->
            <div class="step-2 twelve wide column">
                <form class="ui form">
                    % if (stash('role') ne 'admin') {
                        <h3 class="ui header ttl-company"></h3>
                        <h4 class="ui header ttl-address"></h4>
                    % } else {
                        <div class="field required">
                            <label>Название организации:</label>
                            <input type="text" id="edt-company" key="company">
                        </div>
                        <div class="field required">
                            <label>Адрес объекта:</label>
                            <input type="text" id="edt-address" key="address">
                        </div>
                    % }
                </form>
            </div>
            <div class="step-2 five wide column">
                <form class="ui form">
                    <div class="field required">
                        <label>Тип присоединения:</label>
                        <div class="ui fluid selection dropdown" id="conn_type_sel">
                            <input type="hidden" name="connection-type">
                            <i class="dropdown icon"></i>
                            <div class="default text">---</div>
                                <div class="menu">
                                    % for my $c (@$conn_types) {
                                        <div class="item" data-value="<%= $c->{characteristic} %>"><%= $c->{characteristic} %></div>
                                    % }
                                </div>
                        </div>
                    </div>
                    <div class="field required">
                        <label>Нагрузка, кВт:</label>
                        <input type="text" placeholder="кВт" id="edt-heat_load" key="heat_load" class="numbers_only float_numbers">
                    </div>
                    <div class="field">
                        <label>Дата ввода в экплуатацию:</label>
                        <input type="text" id="edt-expl" key="build_date" class="numbers_only">
                    </div>
                    <div class="field">
                        <label>Дата капитального ремонта:</label>
                        <input type="text" id="edt-repair" key="reconstruction_date" class="numbers_only">
                    </div>
                    <div class="ui checkbox">
                        <input type="checkbox" name="example" id="chb-closed" key="closed">
                        <label>Закрыть редактирование</label>
                    </div>
                </form>
            </div>
            <!-- END OF STEP 2 -->

            <!-- STEP 3 -->
            <div class="step-3 sixteen wide column">
                <h3 class="ui header ttl-company"></h3>
                <h4 class="ui header ttl-address"></h4>
            </div>
            <div class="step-3 sixteen wide column">
                <a href="#" class="ui basic button right floated" id="btn-add-obj-group-1">Добавить объект на верхнем уровне</a>
            </div>
            <div id="table" class="step-3 sixteen wide column">
                <table class="ui selectable celled very compact small table">
                    <thead>
                        <tr>
                            <th class="center aligned">Наименование объекта</th>
                            <th class="center aligned">Характеристика/ Материал</th>
                            <th class="center aligned">Количество,<br/>п.м./шт</th>
                            <th class="center aligned">Диаметр, мм</th>
                            <th class="center aligned">Тип изоляции</th>
                            <th class="center aligned">Способ прокладки</th>
                            <th class="center aligned">Год ввода в экспл</th>
                            <th class="center aligned">Год посл. реконс.</th>
                            <th class="center aligned">Износ, %</th>
                        </tr>
                    </thead>
                    <tbody id="tbl-objects-list">
                        <!-- <div id="popup" class="ui flowing popup top left transition">Список объектов предприятия</div> --!>
                    </tbody>
                </table>
            </div>
            <div id="edit_modal" class="ui small modal step-3">
                <i class="close icon"></i>
                <div class="header">
                    Форма редактирования
                </div>
                <div class="content">
                    <div class="description ui centered grid">
                        <div class="twelve wide column">
                            <form class="ui form">
                                <div class="required field">
                                    <label>Наименование объекта:</label>
                                    <div id="objects_names" class="ui fluid selection dropdown">
                                        <input type="hidden" name="unknown">
                                        <i class="dropdown icon"></i>
                                        <div class="default text">---</div>
                                        <div class="menu">
                                            % for my $item (@$objects_names) {
                                            <div class="item" data-value="<%= $item->{id} %>" group="<%= $item->{group_id} %>"><%= $item->{name} %></div>
                                            % }
                                        </div>
                                    </div>
                                </div>
                                <div class="two fields">
                                    <div class="field">
                                        <label>Характеристика/материал:</label>
                                        <input type="text" id="edt-characteristic">
                                    </div>
                                    <div class="field">
                                        <label>Количество, п.м./шт:</label>
                                        <input type="text" id="edt-characteristic-value" class="numbers_only">
                                    </div>
                                </div>
                                <div class="two fields">
                                    <div class="field">
                                        <label>Диаметр, мм:</label>
                                        <input type="text" id="edt-size" class="numbers_only">
                                    </div>
                                    <div class="field">
                                        <label>Тип изоляции:</label>
                                        <div id="isolation_type" class="ui fluid selection dropdown">
                                            <input type="hidden" name="unknown">
                                            <i class="dropdown icon"></i>
                                            <div class="default text">---</div>
                                            <div class="menu">
                                                <div class="item" data-value="-1">Пустой элемент</div>
                                                <% for my $i (@$isolation_types) { %>
                                                    <div class="item" data-value="<%= $i->{id} %>"><%= $i->{name} %></div>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="two fields">
                                    <div class="field">
                                        <label>Способ прокладки тепл. сетей:</label>
                                        <div id="laying_method" class="ui fluid selection dropdown">
                                            <input type="hidden" name="unknown">
                                            <i class="dropdown icon"></i>
                                            <div class="default text">---</div>
                                            <div class="menu">
                                                <div class="item" data-value="-1">Пустой элемент</div>
                                                <% for my $m (@$laying_methods) { %>
                                                    <div class="item" data-value="<%= $m->{id} %>"><%= $m->{name} %></div>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field">
                                        <label>Инструментальный износ:</label>
                                        <input type="text" id="edt-wear" class="numbers_only float_numbers">
                                    </div>
                                </div>
                                <div class="two fields">
                                    <div class="field">
                                        <label>Год ввода в эксплуатацию:</label>
                                        <input type="text" id="edt-install-year" class="numbers_only">
                                    </div>
                                    <div class="field">
                                        <label>Год последней реконструкции:</label>
                                        <input type="text" id="edt-reconstruction-year" class="numbers_only">
                                    </div>
                                </div>

                            </form>
                        </div>
                        <div class="sixteen wide column actions">
                            <div class="right floated ui deny button">
                                Отмена
                            </div>
                            <div class="right floated ui positive button" id="btn-save-object">
                                Сохранить
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="delete_modal" class="ui small modal step-3">
                <div class="header">
                    Удаление объекта
                </div>
                <div class="content">
                    <p>Вы уверены, что хотите удалить объект "<span id="obj_name_field"></span>"?</p>
                </div>
                <div class="actions">
                    <div class="ui negative button">
                        Отмена
                    </div>
                    <div class="ui positive right labeled icon button" id="btn-delete-row">
                        Удалить
                        <i class="checkmark icon"></i>
                    </div>
                </div>
            </div>
            <!-- END OF STEP 3 -->

            <div class="sixteen wide column">
                <a href="#" class="step-2 step-3 ui basic button left floated" onclick="prev_step(); return false;">Назад</a>
                <a href="#" class="step-1 step-2 ui basic button right floated disabled" id="btn_next" onclick="next_step(); return false;">Далее</a>
                <div class="step-2 ui basic button right floated disabled" id="btn_save_building"
                    onclick="save_changed_building(); return false;">
                    <i class="icon" style="display: none;"></i>
                    <span>Сохранить<span>
                </div>
                <a href="<%= $general_url %>/catalogue" class="step-3 ui basic button right floated" id="btn_finish">Готово</a>
                <a href="#" class="ui basic button right floated" onclick="print(); return false;">Печать</a>
            </div>
        </div>
        <script src="<%= $general_url %>/js/functions.js"></script>
%= javascript begin
    var selected_object, current_step = 1, current_object, current_object_main_properties, downloaded_addresses = {};
    $(function () {
        $(".step-2,.step-3").hide();
        $(".step-1").show();
        $("#btn-add-obj-group-1").click(on_show_modal('Добавить объект на первом уровне иерархии'));

        var currently_downloaded = '',
            $addr_sel = $("#address_sel"),
            downloaded_companies = {
                'Москва': [
                    % for my $c (@$companies) {
                        [<%== join ',', map { s/'/\\'/g; "'$_'" } @$c{qw(id name)} %>],
                    % }
                ],
            };
        function update_companies(elem) {
            var arr = downloaded_companies[elem];
            if (!arr)
                return;
            var $sel = $("#org_sel").html('').append($("<option>", { 'value': '-1', 'selected': true }).text("Выберите организацию"));
            arr.forEach(function (item) {
                $sel.append($("<option>", {
                        'value': item[0],
                    }).text(item[1]));
            });
            $sel.val('-1').trigger('refresh');
        }

        $("#isolation_type").dropdown("set selected", "-1").dropdown("save defaults");
        $("#laying_method").dropdown("set selected", "-1").dropdown("save defaults");
        $("#objects_names").dropdown();

        $("#region_sel").on('change', function (e) {
            var value = e.target.value;
            selected_object = { region: value };
            current_object = { region: value };
            if (downloaded_companies[value]) {
                update_companies(value);
            } else if (currently_downloaded != value) {
                currently_downloaded = value;
                $.ajax({
                    method: 'get',
                    url: '<%= $general_url %>/cgi-bin/companies',
                    data: {
                        region: value,
                    },
                    success: function (data) {
                        var arr = [];
                        data.companies.forEach(function (val) {
                            arr.push([ val.id, val.name ]);
                        });
                        downloaded_companies[value] = arr;
                        update_companies(value);
                    },
                });
            }
            $("#btn_next").addClass('disabled');
            $addr_sel.hide();
        }).trigger('change');

        $("#org_sel").on('change', function (e) {
            $("#btn_next").addClass("disabled");

            var value = e.target.value;
            if (value == "-1") {
                update_addresses();
                return;
            }
            if (downloaded_addresses[value]) {
                update_addresses(value);
            } else {
                $("#btn_next").addClass('loading');
                $.ajax({
                    method: 'get',
                    url: '<%= $general_url %>/cgi-bin/buildings',
                    data: {
                        company: value,
                    },
                    success: function (data) {
                        downloaded_addresses[value] = data.buildings;
                        update_addresses(value);
                    },
                });
            }
        });
        $("#conn_type_sel").dropdown({
            'custom change': 'activate',
            onChange: function (value, name) {
                update_current_object('conn_type', value);
                toggle_next_btn();
            },
        });
        $addr_sel.on('click', '.field input', function () {
            // dirty hack =( Can't trigger 'refresh' for semantic-ui radio button
            var $this = $(this);
            $this.parent().parent().parent().find('input').prop('checked', false);
            $this.prop('checked', true);
            on_radio_click($this);
        });
        $("#edt-heat_load,#edt-expl,#edt-repair,#edt-company,#edt-address,#chb-closed").on('change', function () {
            var $this = $(this);
            update_current_object($this.attr('key'), $this.val());
            toggle_next_btn();
        });
        $(".numbers_only").on('keypress', function (e) {
            var entered_value = $(this).val() + String.fromCharCode(e.charCode);
            var regexPattern = /^\d+(\.\d*)?$/;
            if (!$(this).hasClass("float_numbers"))
                regexPattern = /^\d*$/;
            if (regexPattern.test(entered_value))
                return true;
            e.preventDefault();
            return false;
        }).on('paste', function (e) {
            // get event text and filter out letter characters
            var regexPattern = /[^0-9.]/g;
            if (!$(this).hasClass("float_numbers"))
                regexPattern = /[^0-9]/g;
            var pastedTxt = e.originalEvent.clipboardData.getData('Text').replace(regexPattern, '');
            if ($.isNumeric(pastedTxt)){
                e.originalEvent.target.value = pastedTxt;
                e.preventDefault();
            } else {
                e.originalEvent.target.value = "";
                e.preventDefault();
            };
        });
    });

    function print() {
        var to_print = selected_object;
        if (to_print.building && current_step == 1)
            to_print = { company: $("#org_sel").find("option:selected").val() };
        window.open(window.location.origin + '<%= $general_url %>/cgi-bin/build?' + $.param(to_print), '_blank');
    }

    function update_addresses(org) {
        var $addr_sel = $("#address_sel"),
            $org_margin = $("#catalog-org-bottom-margin"),
            arr = downloaded_addresses[org],
            $items_container = $addr_sel.find('.grouped.fields'),
            editable_found = false,
            selected_input = $items_container.find("input:checked").attr("name"),
            input_to_check_id = undefined;
        $items_container.find('.field').remove();

        if (!arr)
            return;

        arr.forEach(function (val, index) {
            var should_be_checked = !editable_found && val.flags.editable;
            if (should_be_checked) {
                if (val.id == selected_input) {
                    editable_found = true;
                    input_to_check_id = undefined;
                } else if (!input_to_check_id) {
                    should_be_checked = false;
                    input_to_check_id = val.id;
                } else
                    should_be_checked = false;
            }
            $items_container.append($("<div>", { 'class': 'field', })
                .append($("<div>", {
                    'class': 'ui radio checkbox'
                        + (val.flags.editable ? '' : ' disabled')
                        + (val.flags.object_v1 ? ' object_v1' : '')
                        + (val.flags.closed ? ' closed_building' : ''),
                }).append($("<input>", { 'type': 'radio', 'name': val.id })
                    .attr('org', org)
                    .prop('checked', should_be_checked)
                    .prop('disabled', !val.flags.editable))
                .append($("<label>").text('ИНО_' + val.id + ": " + val.name))));
        });
        if (input_to_check_id)
            $items_container.find("input[name=" + input_to_check_id + "]").prop('checked', true);

        var $selected = $items_container.find('input:checked').first(),
            classes = "loading";
        if ($selected[0])
            classes += " disabled";
        on_radio_click($selected);

        if (current_step == 1) {
            $addr_sel.show();
            $org_margin.hide();
            $("#btn_next").removeClass(classes);
        }
    }

    function save_changed_building() {
        var $ctype = $("#conn_type_sel"),
            $heat_load = $("#edt-heat_load"),
            $build_date = $("#edt-expl"),
            $repair_date = $("#edt-repair"),
            % if (stash('role') eq 'admin') {
            $address = $("#edt-address"),
            $company = $("#edt-company"),
            % }
            $btn = $("#btn_save_building"),
            $closed = $("#chb-closed"),
            $icon = $btn.find("i"),
            to_send = {
                conn_type:      $ctype.dropdown('get value').trim(),
                heat_load:      $heat_load.val().trim(),
                build_date:     $build_date.val().trim(),
                repair_date:    $repair_date.val().trim(),
                id:             current_object_main_properties.id,
                company_id:     current_object_main_properties.company_id,
                flags: {
                    closed: ($closed.attr("checked") && true || false),
                },
                % if (stash('role') eq 'admin') {
                address:        $address.val().trim(),
                company_name:   $company.val().trim(),
                % }
            };

        $.ajax({
            method: 'get',
            url: '<%= $general_url %>/cgi-bin/building/edit',
            data: to_send,
            success: function (data) {
                var company_id = data.buildings[0].company_id;
                downloaded_addresses[company_id] = data.buildings;
                $btn.addClass("basic disabled").removeClass("green").find("span").text("Сохранено!");
                $icon.addClass("checkmark").removeClass("circle thin").show();
                $("#org_sel").find("option[value=" + company_id + "]")
                    .text(data.buildings[0].company)
                    .trigger('refresh')
                    % if (stash('role') eq 'admin') {
                    .trigger('change')
                    % }
                    ;
            },
        });
    }

    function on_add_child_click(parent) {
        return on_show_modal('Форма добавления объекта', parent);
    }

    function on_remove_item_click(obj) {
        return function () {
            var $frm = $('#delete_modal');

            $frm.find("#btn-delete-row").unbind('click').click(function () {
                $.ajax({
                    method: 'get',
                    url: '<%= $general_url %>/cgi-bin/objects/remove',
                    data: { id: obj.id },
                    success: function () {
                        load_objects();
                        $frm.modal('hide');
                    },
                });
            });

            $frm.find("span#obj_name_field").text(obj.new_name);
            $frm.modal('show');
        }
    }

    function update_current_object(key, value) {
        if (key) {
            current_object[key] = value;
        } else {
            current_object.conn_type = $('#conn_type_sel').dropdown('get value');
            [ 'edt-heat_load', 'edt-expl', 'edt-repair', 'edt-company', 'edt-address' ].forEach(function (sel) {
                var $o = $("#" + sel);
                current_object[$o.attr('key')] = $o.val();
            });
            [ 'chb-closed' ].forEach(function (sel) {
                var $o = $("#" + sel);
                current_object[$o.attr('key')] = $o.attr("checked") != undefined;
            });
        }
    }

    function on_radio_click($o) {
        if (!$o.length)
            return;

        var name = $o.attr('name');
        selected_object = { building: name };
        current_object.building = name;
        $(".ttl-address").text($o.parent().children('label').text());

        current_object_main_properties = (downloaded_addresses[$o.attr("org")] || []).find(function (e) { return name == e.id; });
        $("#edt-address").val(current_object_main_properties.name || "");
        var $ctype = $("#conn_type_sel"),
            $heat_load = $("#edt-heat_load"),
            $build_date = $("#edt-expl"),
            $repair_date = $("#edt-repair"),
            $closed = $("#chb-closed"),
            cur_object = current_object_main_properties;

        if (!cur_object)
            return;

        function set_edt($o, v) {
            if (v != undefined)
                return function () { $o.val(v); };
            else
                return function (v) { $o.val(v); };
        };

        function set_chb($o, v) {
            if (v != undefined)
                return function () { $o.attr('checked', v); };
            else
                return function (v) { $o.attr('checked', v); };
        };

        [
            {
                data: cur_object.characteristic,
                ok: function (v) { $ctype.dropdown('set selected', v); },
                fail: function () { $ctype.dropdown('restore defaults'); },
            },
            {
                data: cur_object.heat_load,
                ok: set_edt($heat_load),
                fail: set_edt($heat_load, ''),
            },
            {
                data: cur_object.build_date,
                ok: set_edt($build_date),
                fail: set_edt($build_date, ''),
            },
            {
                data: cur_object.reconstruction_date,
                ok: set_edt($repair_date),
                fail: set_edt($repair_date, ''),
            },
            {
                data: cur_object.flags.closed,
                ok: set_chb($closed),
                fail: set_chb($closed, false),
            },
        ].forEach(function (e) {
            if (e.data == undefined)
                e.fail();
            else
                e.ok(e.data);
        });

        update_current_object();
        $("#btn_next").removeClass('disabled'); // hack: fixme
    }

    function on_edit_item_click(obj, parent_obj) {
        return on_show_modal("Форма редактирования", parent_obj, obj);
    }

    function on_show_modal(name, parent_obj, obj) {
        return function () {
            obj = obj || {};

            var $frm = $("#edit_modal"),
                $select = $frm.find("#objects_names");

            $frm.find('.header').text(name);

            var hide = [];
            if (parent_obj == undefined) {
                hide = [ 4 ];
            } else if (parent_obj.new_group == "1") {
                hide = [ 1 ];
            } else if (parent_obj.new_group == "2") {
                hide = [ 1, 2, 3 ];
            } else {
                console.error("INVALID OBJECT PARENT GROUP ID!");
            }

            $select.find(".item").show();
            hide.forEach(function (i) { $select.find(".item[group='" + i + "']").hide(); });

            $frm.find("#edt-characteristic").val(obj.characteristic || "");
            $frm.find("#edt-characteristic-value").val(obj.count || "");
            $frm.find("#edt-wear").val(obj.wear || "");
            $frm.find("#edt-install-year").val(obj.install_year || "");
            $frm.find("#edt-reconstruction-year").val(obj.reconstruction_year || "");
            $frm.find("#edt-size").val(obj.diametr || "");

            // TODO: refactor
            if (obj.new_name_id != undefined)
                $select.dropdown("set selected", obj.new_name_id);
            else
                $select.dropdown('clear');
            if (obj.isolation_type_id != undefined)
                $frm.find("#isolation_type").dropdown("set selected", obj.isolation_type_id);
            else
                $frm.find("#isolation_type").dropdown("restore defaults");
            if (obj.laying_method_id != undefined)
                $frm.find("#laying_method").dropdown("set selected", obj.laying_method_id);
            else
                $frm.find("#laying_method").dropdown("restore defaults");

            $frm.find("#btn-save-object").unbind('click').click(function () {
                var obj_name = $frm.find("#objects_names").dropdown("get value");
                if (!obj_name) {
                    // TODO: FIXME
                    alert("Необходимо указать имя объекта");
                    return false;
                }
                var $laying_method = $frm.find("#laying_method"),
                    $isolation_type = $frm.find("#isolation_type");

                $.ajax({
                    method: 'get',
                    url: '<%= $general_url %>/cgi-bin/objects/add-edit',
                    data: {
                        id: obj.id,
                        characteristic: $frm.find("#edt-characteristic").val(),
                        count: $frm.find("#edt-characteristic-value").val(),
                        isolation_type: $isolation_type.dropdown('get value') == -1 ? undefined : $isolation_type.dropdown('get value'),
                        laying_method: $laying_method.dropdown('get value') == -1 ? undefined : $laying_method.dropdown('get value'),
                        wear: $frm.find("#edt-wear").val(),
                        install_year: $frm.find("#edt-install-year").val(),
                        reconstruction_year: $frm.find("#edt-reconstruction-year").val(),
                        diametr: $frm.find("#edt-size").val(),
                        object_name: obj_name,
                        building: current_object.building,
                        parent_object: parent_obj && parent_obj.id,
                    },
                    success: function () {
                        load_objects(); // todo: return new objects list from server
                        $frm.modal('hide');
                    },
                });
            });

            $frm.modal('show');
            return false;
        }
    }

    function load_objects() {
        var classes = "disabled loading",
            $finish_btn = $("#btn_finish").addClass(classes);
        $.ajax({
            method: 'get',
            url: '<%= $general_url %>/cgi-bin/objects',
            data: selected_object,
            success: function (data) {
                $finish_btn.removeClass(classes);
                var $objects_list = $("#tbl-objects-list").html('');

                var objects_with_children = {};
                data.objects.forEach(function (item) {
                    objects_with_children[item.parent_id] = 1;
                });

                data.objects.forEach(function (item) {
                    var $tr = $("<tr>");

                    if (item.new_group == "1")
                        $tr.addClass("positive").attr("id", "marked");

                    if (item.new_group == "2" || item.new_group == "3") {
                        $tr.addClass("positive");
                        if (item.parent_id == undefined)
                            $tr.attr("id", "marked");
                    }

                    var parent_obj;
                    if (item.parent_id != undefined) {
                        for (var o in data.objects) {
                            if (data.objects[o].id == item.parent_id) {
                                parent_obj = data.objects[o];
                                break;
                            }
                        }
                    }

                    // old names are not expected
                    [ 'new_name',
                      'characteristic',
                      'count',
                      'diametr',
                      'isolation',
                      'laying_method',
                      'install_year',
                      'reconstruction_year',
                      'wear',
                    ].forEach(function (input) {
                        var key = input,
                            $td = $("<td>"),
                            text = item[key] == undefined ? "" : item[key],
                            n_icons = 0;

                        if (input == "new_name") {
                            // TODO: remove hardcode
                            var $div = $("<div>").addClass("ui mini basic icon buttons outside-buttons");

                            if (!objects_with_children[item.id]) {
                                ++n_icons;
                                $div.append(
                                    $("<button>")
                                        .addClass("ui button")
                                        .click(on_remove_item_click(item))
                                        .append(
                                            $("<i>").addClass("remove icon")
                                        )
                                    );
                            }

                            ++n_icons;
                            $div.append(
                                $("<button>")
                                    .addClass("ui button")
                                    .click(on_edit_item_click(item, parent_obj))
                                    .append(
                                        $("<i>").addClass("write icon")
                                    )
                                );
                            $td.append($("<div>").append($div).append($("<span>").text(text)));

                            if (item.new_group == "1" || item.new_group == "2") {
                                ++n_icons
                                $div.append(
                                    $("<button>")
                                        .addClass("ui button")
                                        .click(on_add_child_click(item))
                                        .append(
                                            $("<i>").addClass("file outline icon")
                                        )
                                    );
                            }
                            $div.addClass('icon-group-' + n_icons);
                        } else {
                            $td.text(text);
                        }


                        $tr.append($td);
                    });

                    $objects_list.append($tr);
                });
            }
        });
    }

    function toggle_save_changed_building_btn(all_fields_set) {
        var $ctype = $("#conn_type_sel"),
            $heat_load = $("#edt-heat_load"),
            $build_date = $("#edt-expl"),
            $repair_date = $("#edt-repair"),
            % if (stash('role') eq 'admin') {
            $company = $("#edt-company"),
            $address = $("#edt-address"),
            % }
            $btn = $("#btn_save_building"),
            $icon = $btn.find("i"),
            closed = $("#chb-closed").attr("checked") != undefined;

        if (!all_fields_set) {
            $btn.addClass("basic disabled").removeClass("green");
            $icon.removeClass("circle thin checkmark").hide();
            return;
        }

        current_object_main_properties = current_object_main_properties || {};
        if ($ctype.dropdown('get value') != current_object_main_properties.characteristic
                || $heat_load.val() != (current_object_main_properties.heat_load || "")
                || $build_date.val() != (current_object_main_properties.build_date || "")
                || $repair_date.val() != (current_object_main_properties.reconstruction_date || "")
                || closed != (current_object_main_properties.flags.closed && true || false)
                % if (stash('role') eq 'admin') {
                || $company.val() != (current_object_main_properties.company || "")
                || $address.val() != (current_object_main_properties.name || "")
                % }
                ) {
            $btn.removeClass("basic disabled").addClass("green");
            $icon.addClass("circle thin").removeClass("checkmark").show();
        } else {
            $btn.addClass("basic disabled").removeClass("green");
            $icon.hide();
        }
        $btn.find("span").text("Соxранить");
    }

    function toggle_next_btn() {
        if (current_object.conn_type && current_object.heat_load
                % if (stash('role') eq 'admin') {
                && current_object.address && current_object.company
                % }
                //&& (current_object.reconstruction_date || current_object.build_date)) { // TODO: don't accept data without any date
                ) {
            $("#btn_next").removeClass('disabled');
            toggle_save_changed_building_btn(true);
        } else {
            $("#btn_next").addClass('disabled');
            toggle_save_changed_building_btn(false);
        }
    }

    function next_step() {
        if (current_step > 3) {
            current_step = 3;
            return;
        } else if (current_step < 1) {
            current_step = 1;
        }

        if (current_step == 1) {
            var company_name = $("#org_sel").find(":selected").text();
            $("#edt-company").val(company_name);
            $(".ttl-company").text(company_name);
            update_current_object();
        }

        $('.step-' + current_step).hide();
        $('#step-' + current_step + '-nav').addClass('disabled').removeClass('active');
        $('.step-' + ++current_step).show();
        $('#step-' + current_step + '-nav').addClass('active').removeClass('disabled');
        $('.modal').hide();

        if (current_step == 2) {
            toggle_next_btn();
        } else if (current_step == 3) {
            load_objects();
        }
    }

    function prev_step() {
        if (current_step <= 1) {
            current_step = 1;
            return;
        } else if (current_step > 3) {
            current_step = 3;
        }

        if (current_step == 2) {
            $("#conn_type_sel").dropdown('clear');
            $("#edt-heat_load,#edt-expl,#edt-repair,#edt-company,#edt-address").val('');
            $("#chb-closed").prop('checked', false);
            $("#btn_next").removeClass('disabled');

            current_object = { region: current_object.region, building: current_object.building };
            on_radio_click($("#address_sel").find('.grouped.fields').find('input:checked').first());
        }

        $('.step-' + current_step).hide();
        $('#step-' + current_step + '-nav').addClass('disabled').removeClass('active');
        $('.step-' + --current_step).show();
        $('#step-' + current_step + '-nav').addClass('active').removeClass('disabled');
    }
% end
    </div>
</div>
